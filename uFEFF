import os
import json
import logging
import boto3
import warnings
from botocore.exceptions import ClientError

# ---------- Setup ----------
warnings.filterwarnings('ignore')
logging.basicConfig(level=logging.INFO)
print("Current working directory:", os.getcwd())

# ---------- Load Config ----------
script_dir = os.path.dirname(os.path.abspath(__file__))
config_path = os.path.join(script_dir, 'config_local_run.json')

with open(config_path, 'r') as f:
    config = json.load(f)

# ---------- AWS Config ----------
aws_config = config['aws']
access_key = aws_config['access_key']
secret_key = aws_config['secret_key']
REGION = aws_config['region']
services_config = config['services']

aws_config_prod = config['aws_prod']
access_key_prod = aws_config_prod['access_key_prod']
secret_key_prod = aws_config_prod['secret_key_prod']
REGION_prod = aws_config_prod['region_prod']

# ---------- Services ----------
sqs_queue_url = services_config['sqs']['HITLReview_Queue']['Queue_URL']
sqs_batch_size = services_config['sqs']['HITLReview_Queue']['Batch_Size']

# ---------- Initialize AWS Clients ----------
try:
    sqs = boto3.client(
        'sqs',
        aws_access_key_id=access_key,
        aws_secret_access_key=secret_key,
        region_name=REGION,
        verify=False
    )
except Exception as e:
    logging.critical("‚ùå Failed to initialize AWS clients", exc_info=True)
    raise SystemExit("Terminating due to AWS initialization error.")

# ---------- BOM Cleaning Utility ----------
def clean_object_key(object_key):
    if not object_key.startswith('T'):
        print(f"‚ö†Ô∏è Unexpected prefix detected in file name: {repr(object_key)}")
        cleaned_key = object_key.replace('\uFEFF', '')
        if cleaned_key.startswith('T'):
            print(f"‚úÖ Cleaned file name: {cleaned_key}")
            return cleaned_key
        else:
            print("‚ùå Cleaning did not restore expected prefix. Manual inspection needed.")
            return object_key
    return object_key

# ---------- SQS Utilities ----------
def read_message_from_queue(queue_url, msg_count):
    print(f"\nüì® Reading messages from SQS Queue: {queue_url}")
    try:
        response = sqs.receive_message(
            QueueUrl=queue_url,
            MaxNumberOfMessages=msg_count,
            WaitTimeSeconds=10
        )
        return response.get('Messages', [])
    except ClientError as e:
        print(f"üö´ Error reading from SQS Queue: {e}")
        raise

# ---------- Main Processing ----------
def process_messages():
    messages = read_message_from_queue(sqs_queue_url, sqs_batch_size)

    if not messages:
        print("‚ÑπÔ∏è No messages to process.")
        return

    for msg in messages:
        try:
            object_key = msg['Body']
            print(f"üìÑ Object key from message: {repr(object_key)}")
            cleaned_key = clean_object_key(object_key)

        except Exception as e:
            print(f"üö® Error processing message: {e}")
            continue

# ---------- Entry ----------
if __name__ == "__main__":
    process_messages()


###################
{'file_id': 1, 'MessageId': 'PLACEHOLDER_ID_1', 'ReceiptHandle': 'PLACEHOLDER_RECEIPT_1', 'MD5OfBody': 'PLACEHOLDER_MD5_1', 'Body': 'T000591995700024V0000R000150004857545P00092D000591995700024UCC_BEST_OriginalFiling_591995700033.PDF.pdf', 'Attributes': {}}


messages in sqs:
View details
Delete

1


ID
Sent
Size
Receive count
52ad9363-ee03-4b7a-a4fa-f5e3c183f4bc
2025-06-30T14:36-05:00
256 bytes
1
122524c1-9ca1-4c4d-b538-e74d4f94ef0e
2025-06-30T14:36-05:00
256 bytes
1
2b416e4b-1ffb-4bb5-8310-78c76f7fdc7f
2025-06-30T14:36-05:00
256 bytes
1
221a4747-5d0f-408b-bed4-646b9878ae13
2025-06-30T14:36-05:00
256 bytes
1
c3324253-40d5-42f7-ab77-476a94da42d6
2025-06-30T14:36-05:00
256 bytes
1
99ca446e-d8d4-4f79-adde-f56460e41503
2025-06-30T14:36-05:00
256 bytes
1
be5d4ca6-8c00-4054-b6f3-c7159f222dfa
2025-06-30T14:36-05:00
256 bytes
1
4361b234-3e9a-4d0f-8e2a-cee4677f479a
2025-06-30T14:36-05:00
260 bytes
1
f0732019-56ad-48e4-a261-86aa9d4656da
2025-06-30T14:36-05:00
256 bytes
1
4836c262-f168-4269-9713-a501df8cbbd4
2025-06-30T14:36-05:00
256 bytes
1

Output of the code:

 Reading messages from SQS Queue: https://sqs.us-east-1.amazonaws.com/160885272637/sos-appian-dev-pii-redaction-rawpdfs-w2j2r4
 Object key from message: "{'file_id': 3, 'MessageId': 'PLACEHOLDER_ID_3', 'ReceiptHandle': 'PLACEHOLDER_RECEIPT_3', 'MD5OfBody': 'PLACEHOLDER_MD5_3', 'Body': 'T000591995700024V0000R000150004857545P00092D000591995700024UCC_BEST_OriginalFiling_591995700032.PDF.pdf', 'Attributes': {}}"
 Unexpected prefix detected in file name: "{'file_id': 3, 'MessageId': 'PLACEHOLDER_ID_3', 'ReceiptHandle': 'PLACEHOLDER_RECEIPT_3', 'MD5OfBody': 'PLACEHOLDER_MD5_3', 'Body': 'T000591995700024V0000R000150004857545P00092D000591995700024UCC_BEST_OriginalFiling_591995700032.PDF.pdf', 'Attributes': {}}"
 Cleaning did not restore expected prefix.
 Object key from message: "{'file_id': 4, 'MessageId': 'PLACEHOLDER_ID_4', 'ReceiptHandle': 'PLACEHOLDER_RECEIPT_4', 'MD5OfBody': 'PLACEHOLDER_MD5_4', 'Body': 'T000591995700024V0000R000150004857545P00092D000591995700024UCC_BEST_OriginalFiling_591995700030.PDF.pdf', 'Attributes': {}}"
 Unexpected prefix detected in file name: "{'file_id': 4, 'MessageId': 'PLACEHOLDER_ID_4', 'ReceiptHandle': 'PLACEHOLDER_RECEIPT_4', 'MD5OfBody': 'PLACEHOLDER_MD5_4', 'Body': 'T000591995700024V0000R000150004857545P00092D000591995700024UCC_BEST_OriginalFiling_591995700030.PDF.pdf', 'Attributes': {}}"
 Cleaning did not restore expected prefix.
